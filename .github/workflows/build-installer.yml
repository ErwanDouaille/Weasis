name: Build native installers
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
      #  - { os: ubuntu-latest, name: GNU, cc: gcc, cxx: g++, platform: x32, wsystem: linux, warc: x86 }
      #  - { os: ubuntu-latest, name: GNU, cc: gcc, cxx: g++, platform: x64, wsystem: linux, warc: x86_64 }
      #  - { os: macos-latest, name: Clang, cc: clang, cxx: clang++, platform: x64, wsystem: macosx, warc: x86_64 }
      #  - { os: windows-latest, name: VS2019, cc: cl, cxx: cl, platform: x32, wsystem: windows, warc: x86 }
        - { os: windows-latest, name: VS2019, cc: cl, cxx: cl, platform: x64, wsystem: windows, warc: x86_64 }
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 16-ea
    #  uses: actions/setup-java@v1
    #  with:
     #   java-version: 16.0.0-ea.13

   # - name: Build with Maven
   #   run: mvn clean install -Dportable=true -P compressXZ -f weasis-distributions
      
    - name: Retrieve version
      run: echo ::set-env name=WEASIS_VERSION::$(awk -F'[<>]' '/<revision>/{print $3}' weasis-parent/pom.xml)$(awk -F'[<>]' '/<changelist>/{print $3}' weasis-parent/pom.xml)
      shell: bash

    - name: Set limited version
      run: |
        echo ::set-env name=WEASIS_CLEAN_VERSION::echo $WEASIS_VERSION | sed -e 's/"//g' -e 's/-.*//')
        echo $WEASIS_VERSION
        echo $WEASIS_CLEAN_VERSION
      shell: bash

    - name: Required variables
      run: |
        echo "${{ matrix.wsystem }}-${{ matrix.warc }}"
        if ["$RUNNER_OS" == "Linux"]; then
          echo ${{ matrix.wsystem }}-${{ matrix.warc }}
        elif ["$RUNNER_OS" == "Windows"]; then
          echo ${{ matrix.wsystem }}-${{ matrix.warc }}
        elif ["$RUNNER_OS" == "MacOS"]; then
          echo ${{ matrix.wsystem }}-${{ matrix.warc }}
        fi
      shell: bash
